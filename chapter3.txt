++ The 0MQ Transports

+++ In-Process Communication

+++ Inter-Process Communication

+++ TCP Unicast

+++ UDP Unicast

+++ Reliable Multicast (PGM)

+++ Embedded Reliable Multicast (EPGM)


[!--

- inproc://name
 - connects two threads in a single process
 - supports all messaging patterns
 - typical use case is for multithreading apps

- ipc://name
 - connects two processes on a single box
 - supports all messaging patterns
 - typical use case is for multithreading apps
 - runs on Unix domain sockets (not available on Windows, OpenVMS)
 - permissions issues:

> Since I want to work under /tmp, this all had to be done programatically. My
> server now mkdir -p's a socket subdirectory and chmod 777's it. The server
> creates and binds the socket in that folder, and then chmod 777's it. The
> server must be run as root (which is fine for my project luckily). If it is
> run as a normal user, the client's still timeout.


- tcp://ipaddress:port
 - bind to address:port
 - bind to *:5555
 - localhost
  - also bind to interface: lo:port, eth1:port, etc.
  - Linux: eth1, eth2, eth3
  - Mac OS X: en1, en2, en3
  - Solaris: e1000g, etc.
 - connect to remote address: host:port

- pgm://address;multicastgroup:port
 - address can be interface name
 - requires decent hardware support
 - means enterprise level switches with IGNP snooping
 - some routers also support PGM
 - runs over IP, requires root privileges
 - more standard
 - rate-limited protocol, sender must define bandwidth
 - pgm is currently broken

- epgm://address;multicastgroup:port
 - encapsulated in UDP packets
 - requires decent hardware support
 - does not require root access
 - non-standard to pgm

--]

++ The Programming Languages

For each language:

* How to install
* Syntax notes
* Example of request-reply
* Error handling
* Online resources

[!--
- one section per language, perhaps server/client demo
--]

+++ Ada
+++ Basic
+++ C
+++ C++
+++ C#
+++ Common Lisp
+++ Erlang
+++ Go
+++ Haskell
+++ Java
+++ Lua
+++ Objective-C
+++ ooc
+++ Perl
+++ PHP
+++ Python
+++ Ruby


++ The Operating Systems

+++ Linux
+++ Windows

- use zmq_errno

+++ AIX
+++ Solaris
+++ Max OS X
+++ OpenVMS
+++ Others

